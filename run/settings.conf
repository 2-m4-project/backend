# Database configuration. You can configure an JDBC url here, along with username and password
# MySQL is officially supported, other databases may work, but may need some additional work
database {
    # The JDBC url for the database
    jdbcUrl: "jdbc:mysql://10.2.33.181/alarmering"
    # The database username
    username: "alarmering"
    # The database password
    password: "2GDmj3h05N4bDSdisTgYBWBTQ5PBG4kHFKbAdnPwAPJmbJB0ZocyumQl436WVgdh"
}

# Classes that should be preloaded, for SQL migrations.
# In a normal environment you don't need to touch this
# If you add custom modules for authentication, you need to add them here
preload: [
    "com.stenden.inf2j.alarmering.server.auth.directory.sql.Preloader"
    "com.stenden.inf2j.alarmering.server.auth.session.sql.SqlSessionStoreMigrator",
    "com.stenden.inf2j.alarmering.server.auth.FirstBootSetupPreloader",
    "com.stenden.inf2j.alarmering.server.history.SqlHistoryService",
]

# Configuration for the http server
http-server {
    # In this list you can define interfaces where the webserver should listen.
    # You can add as many interfaces as you want. Both IPv4 and IPv6 are supported
    # For ipv6, you need to use the url format, with square brackets, for example
    #   [2001:DB8::1]:8000
    interfaces: {
        "0.0.0.0:8000" {
            # SSL config. SSL/TLS is disabled on this interface
            ssl {
                enabled = false
            }
        }

        "0.0.0.0:8001" {
            ssl {
                # Enable SSL/TLS on this interface. When this is enabled, this server will support HTTP/2
                enabled = true
                # The certificate public key chain. Supports PEM format
                cert: "localhost:8001.crt"
                # The certificate private key. Supports PEM format
                cert-key: "localhost:8001.key"

                # The TLS ciphers to use for the TLS server
                ciphers: [
                    "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
                    "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
                    "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
                    "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
                    "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"
                    "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"
                ]
            }
        }
    }
}

# The service to use to store local user data. Currently only 1 implementation is present, but you can add more
users {
    service {
        "com.stenden.inf2j.alarmering.server.auth.user.sql.SqlUserService" {

        }
    }
}
